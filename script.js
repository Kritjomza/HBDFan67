let timer = 60;
let score = 0;
let emojiInterval;
const emojis = ["üåπ", "üåù", "üåï", "üíó", "üåì", "üåó"]; // ‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ
const gameArea = document.getElementById("gameArea");
const emojiElement = document.getElementById("emoji");
const timerElement = document.getElementById("timer");
const scoreElement = document.getElementById("score");
const resultArea = document.getElementById("resultArea");
const resultMessage = document.getElementById("resultMessage");
const retryButton = document.getElementById("retryButton");
const goButton = document.getElementById("goButton");
const startButton = document.getElementById("startButton");

startButton.addEventListener("click", startGame);
retryButton.addEventListener("click", resetGame);

function startGame() {
  startButton.classList.add("hidden");
  gameArea.classList.remove("hidden");
  timerElement.textContent = timer;
  score = 0;
  updateScore();
  startTimer();
  showEmoji();
}

function startTimer() {
  const countdown = setInterval(() => {
    timer--;
    timerElement.textContent = timer;

    if (timer === 0) {
      clearInterval(countdown);
      clearInterval(emojiInterval);
      endGame();
    }
  }, 1000);
}

function showEmoji() {
  emojiInterval = setInterval(() => {
    const randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];
    emojiElement.textContent = randomEmoji;

    emojiElement.onclick = () => {
      handleEmojiClick(randomEmoji);
    };
  }, 1000); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ó‡∏∏‡∏Å 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
}

function handleEmojiClick(emoji) {
  switch (emoji) {
    case "üíó":
      score += 5;
      break;
    case "üåπ":
      score += 2;
      break;
    case "üåù":
      score += 1;
      break;
    case "üåï":
      score -= 2;
      break;
    case "üåì":
      score -= 2;
      break;
    case "üåó":
      score += 1;
      break;
  }
  updateScore();
}

function updateScore() {
  scoreElement.textContent = `‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: ${score}`;
}

function endGame() {
  gameArea.classList.add("hidden");
  resultArea.classList.remove("hidden");

  if (score >= 300) {
    resultMessage.textContent = "‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å! ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÑ‡∏õ‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢!";
    goButton.classList.remove("hidden");
  } else {
    resultMessage.textContent = "‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏∞‡∏Ñ‡∏±‡∏ö‡∏öüòò";
    retryButton.classList.remove("hidden");
  }
}

function resetGame() {
  timer = 60;
  score = 0;
  resultArea.classList.add("hidden");
  startButton.classList.remove("hidden");
  goButton.classList.add("hidden");
  retryButton.classList.add("hidden");
}

function endGame() {
    gameArea.classList.add("hidden");
    resultArea.classList.remove("hidden");
  
    if (score >= 300) {
      resultMessage.textContent = "‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å! ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÑ‡∏õ‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢!";
      goButton.classList.remove("hidden"); // ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏° Go
      retryButton.classList.add("hidden"); // ‡∏ã‡πà‡∏≠‡∏ô‡∏õ‡∏∏‡πà‡∏° Retry
    } else {
      resultMessage.textContent = "‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ô‡∏∞‡∏Ñ‡∏±‡∏ö‡∏öüòò";
      retryButton.classList.remove("hidden"); // ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏° Retry
      goButton.classList.add("hidden"); // ‡∏ã‡πà‡∏≠‡∏ô‡∏õ‡∏∏‡πà‡∏° Go
    }
  }
  
